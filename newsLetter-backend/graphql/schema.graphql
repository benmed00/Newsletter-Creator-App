# schema.graphql
scalar Date

type Post {
  id: ID!
  title: String!
  subject: String!
  preheader: String
  content: String
  status: String
  scheduledAt: Date
  sentAt: Date
  createdAt: Date
  updatedAt: Date
  user: ID!
}

type Subscriber {
  id: ID!
  email: String!
  name: String
  status: String
  createdAt: Date
  updatedAt: Date
  user: ID!
}

type User {
  id: ID!
  name: String
  email: String!
  oauthProvider: String
  oauthId: String
  createdAt: Date
  updatedAt: Date
}

type Query {
  posts: [Post!]!
  subscribers: [Subscriber!]!
  me: User!

  post(id: ID!): Post
  subscriber(id: ID!): Subscriber
}

type Mutation {
  createPost(
    title: String!
    subject: String!
    preheader: String
    content: String
    status: String
    scheduledAt: Date
  ): Post!

  updatePost(
    id: ID!
    title: String
    subject: String
    preheader: String
    content: String
    status: String
    scheduledAt: Date
  ): Post!

  deletePost(id: ID!): Boolean!

  createSubscriber(email: String!, name: String, status: String): Subscriber!
  deleteSubscriber(id: ID!): Boolean!

  signup(name: String!, email: String!, password: String!): String!  # returns JWT
  login(email: String!, password: String!): String!              # returns JWT
}
